@inject Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider schemeProvider
@model RNews.Models.ViewModels.LoginViewModel
@{
    ViewData["Title"] = "Login";
}

<div class="row justify-content-center">
    <div class="col-md-4">
        <h1 class="text-center">LogIn</h1>
        <hr />
        <form asp-action="Login" asp-controller="Auth" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Email" class="form-control" placeholder="Email address" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Password" class="form-control" placeholder="Password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="LogIn" class="btn btn-primary btn-lg btn-block" />
            </div>
        </form>
        <hr />
        @foreach (var scheme in await schemeProvider.GetRequestHandlerSchemesAsync())
        {
            <form asp-action="login" asp-controller="authexternal" method="post">
                <input type="hidden" name="Provider" value="@scheme.Name" />
                <input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />

                <button class="btn btn-lg btn-link btn-block" type="submit">Login using @scheme.DisplayName</button>
            </form>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
